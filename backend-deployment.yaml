apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
  labels:
    app: backend-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend-pods
  template:
    metadata:
      labels:
        app: backend-pods
    spec:
      containers:
        name: backend-pod
        livenessProbe:
          httpGet:
            path: /liveliness
            port: 8000
          initialDelaySeconds: 20
          timeoutSeconds: 3
        # Replace  with your project ID or use `make template`
        image: gcr.io/scrapmap/backend
        # This setting makes nodes pull the docker image every time before
        # starting the pod. This is useful when debugging, but should be turned
        # off in production.
        imagePullPolicy: Always
        # env:
        #     # [START cloudsql_secrets]
        #     - name: DATABASE_USER
        #       valueFrom:
        #         secretKeyRef:
        #           name: cloudsql
        #           key: username
        #     - name: DATABASE_PASSWORD
        #       valueFrom:
        #         secretKeyRef:
        #           name: cloudsql
        #           key: password
        #     # [END cloudsql_secrets]
        # ports:
        # - containerPort: 8079

      # [START proxy_container]
      # - image: gcr.io/cloudsql-docker/gce-proxy:1.16
      #   name: cloudsql-proxy
      #   command: ["/cloud_sql_proxy", "--dir=/cloudsql",
      #             "-instances=gcp-cloud-tutorial-69:us-east1:scrapmap-test=tcp:5432",
      #             "-credential_file=/secrets/cloudsql/credentials.json"]
      #   volumeMounts:
      #     - name: cloudsql-oauth-credentials
      #       mountPath: /secrets/cloudsql
      #       readOnly: true
      #     - name: ssl-certs
      #       mountPath: /etc/ssl/certs
      #     - name: cloudsql
      #       mountPath: /cloudsql
      # [END proxy_container] 
      # # [START frontend ]
      # - name: frontend
      #   image: gcr.io/gcp-cloud-tutorial-69/scrapmap-frontend
      #   imagePullPolicy: Always
      #   ports:
      #     - containerPort: 8080
      # # [END frontend ]
      # [START volumes]
      # volumes:
      #   - name: cloudsql-oauth-credentials
      #     secret:
      #       secretName: cloudsql-oauth-credentials
      #   - name: ssl-certs
      #     hostPath:
      #       path: /etc/ssl/certs
      #   - name: cloudsql
      #     emptyDir:
      # [END volumes]        
# [END kubernetes_deployment]
