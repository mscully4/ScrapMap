apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
  labels:
    app: frontend-deployment
spec:
  replicas: 1
  #Wait 60 seconds before declaring a pod to be ready
  minReadySeconds: 60
  selector:
    matchLabels: 
      app: frontend-pods
  strategy: 
    rollingUpdate:
      #Only allows one additional pod to be created over the specified replica count
      maxSurge: 1
      #The number of pods available must be at least the specified replica count minus 0
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: frontend-pods
    spec:
       # run using the frontend service acccount
      serviceAccountName: frontend-sa
      containers:
      # [React App]
      - name: frontend-pod
        image: gcr.io/scrapmap-277602/frontend:latest
        resources:
          # Setting the amount of resources the pod needs to be guaranteed
          requests:
            cpu: .1
            memory: '256M'
        # securityContext:
          # Run as guest
          # runAsUser: 405
          # Don't allow the user to run as root
          # runAsNonRoot: true
          # readOnlyRootFilesystem: true
        #Tests whether the pod is still alive
        livenessProbe:
          httpGet:
            path: /
            port: 80
          #Wait 30 seconds before probing 
          initialDelaySeconds: 30
          #Probe request times out after 3 seconds
          timeoutSeconds: 3
        #Tests whether the pod is ready to serve requests
        readinessProbe:
          #Probe will be executed every 3 seconds
          periodSeconds: 3
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
        #Always re-pull the container image when the pod is starting up
        #Disable in Production
        imagePullPolicy: Always
        lifecycle:
          preStop:
            exec:
              command:
                - sh
                - -c 
                - "sleep 5"
        ports:
        - containerPort: 80


